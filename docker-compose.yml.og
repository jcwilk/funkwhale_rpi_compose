version: "2"

services:
  postgres:
    restart: unless-stopped
    networks:
      - default
    # env_file: .env
    image: postgres:11
    volumes:
      - "data-postgres:/var/lib/postgresql/data"

  redis:
    restart: unless-stopped
    networks:
      - default
    # env_file: .env
    image: redis:3
    volumes:
      - "data-redis:/data"

  celeryworker:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    env_file: .env
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    command: celery -A funkwhale_api.taskapp worker -l INFO
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "data-serve-music:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "data-media-root:${MEDIA_ROOT}"

  celerybeat:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    # env_file: .env
    command: celery -A funkwhale_api.taskapp beat -l INFO

  api:
    restart: unless-stopped
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
    depends_on:
      - postgres
      - redis
    # env_file: .env
    volumes:
      - "data-serve-music:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "data-media-root:${MEDIA_ROOT}"
      - "data-serve-static:${STATIC_ROOT}"
      - "data-funkwhale-frontend:/frontend"
    ports:
      - "5000"

  nginx:
    restart: unless-stopped
    # image: nginx
    build:
      context: "./nginx"
      dockerfile: Dockerfile-nginx-custom
    networks:
      - default
    depends_on:
      - api
    # env_file:
    #   - .env
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      # - "./nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
      # - "./nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "data-serve-music:${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:ro"
      - "data-media-root:${MEDIA_ROOT}:ro"
      - "data-serve-static:${STATIC_ROOT}:ro"
      - "data-funkwhale-frontend:/frontend:ro"
    ports:
      # override those variables in your .env file if needed
      - "${FUNKWHALE_API_IP}:${FUNKWHALE_API_PORT}:80"
    command: >
        sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
        < /etc/nginx/conf.d/funkwhale.template
        > /etc/nginx/conf.d/default.conf
        && cat /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"

volumes:
  data-music-volume:
  data-media-volume:
  data-postgres:
  data-redis:
  data-serve-music:
  data-media-root:
  data-serve-static:
  data-funkwhale-frontend:

networks:
  default:
